version: '3.4'
services:

  vpn:
    container_name: vpn
    image: dperson/openvpn-client:armhf
    cap_add:
      - net_admin # required to modify network interfaces
    restart: unless-stopped
    volumes:
      - /dev/net/tun:/dev/net/tun # tun device
      - ${HOME}/.vpn:/vpn # OpenVPN configuration
    ports:
      - 8112:8112 # port for deluge web UI to be reachable from local network
    command: '-d -r 10.1.10.0/24' # route local network traffic

  no-ip:
    container_name: no-ip
    depends_on:
      - vpn
    image: cwmyers/rpi-no-ip:latest
    restart: always
    network_mode: host
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${HOME}/.config/no-ip:/config # config files

  web:
    container_name: web
    image: nginx:latest
    restart: unless-stopped
    network_mode: host
    ports:
      - "8080:80"
    volumes:
      - ./index.html:/docroot/index.html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf

  samba:
    container_name: samba
    image: dperson/samba:armhf
    restart: always
    image: dperson/samba:armhf
    restart: always
    network_mode: host
    image: dperson/samba:armhf
    restart: always
    network_mode: host
    command: ["-S", "-w WORKGROUP", "-u admin;password", "-sMovies;/movies;yes;yes;yes;all;admin;admin;Movies", "-sTV Series;/series;yes;yes;yes;all;admin;admin;Movies", "-r", "-n"]
    environment:
      - GLOBAL="client min protocol = SMB3; server min protocol = SMB3; server string = SeedBox; netbios name = SeedBox; name resolve order = bcast host"
    ports:
      - "445:445"
      - "137:137"
      - "138:138"
      - "139:139"
    volumes:
      - /media/series:/series:rw # download folder
      - /media/movies:/movies:rw # download folder

  deluge:
    depends_on:
      - vpn
    image: lsioarmhf/deluge:latest
    restart: always
    network_mode: service:vpn # run on the vpn network
    environment:
      - PUID=1000 # default user id, for downloaded files access rights
      - PGID=1000 # default group id, for downloaded files access rights
      - TZ=Europe/Paris # timezone
    volumes:
      - /media/ongoing/completed:/downloads/completed # download folder
      - /media/ongoing/incomplete:/downloads/incomplete # download folder
      - /media/ongoing/torrent-blackhole:/downloads/torrent-blackhole # put .torrent files
      - ${HOME}/.config/deluge:/config # config files

  nzbget:
    container_name: nzbget
    image: lsioarmhf/nzbget:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=1000 # default user id, for downloaded files access rights
      - PGID=1000 # default group id, for downloaded files access rights
      - TZ=Europe/Paris # timezone
    volumes:
      - /media/ongoing/completed:/downloads/completed # download folder
      - /media/ongoing/incomplete:/downloads/intermediate # download folder
      - /media/ongoing/nzb-blackhole:/downloads/nzb # place where to put .nzb files
      - ${HOME}/.config/nzbget:/config # config files

  jackett:
    container_name: jackett
    image: lsioarmhf/jackett:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=1000 # default user id, for downloaded files access rights
      - PGID=1000 # default group id, for downloaded files access rights
      - TZ=Europe/Paris # timezone
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /media/ongoing/torrent-blackhole:/downloads # place where to put .torrent files
      - ${HOME}/.config/jackett:/config # config files

  hydra:
    container_name: hydra
    image: lsioarmhf/hydra2:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=1000 # default user id, for downloaded files access rights
      - PGID=1000 # default group id, for downloaded files access rights
      - TZ=Europe/Paris # timezone
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /media/ongoing/nzb-blackhole:/downloads # place where to put .torrent files
      - ${HOME}/.config/hydra:/config # config files

  sonarr:
    container_name: sonarr
    image: lsioarmhf/sonarr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=1000 # default user id, for downloaded files access rights
      - PGID=1000 # default group id, for downloaded files access rights
      - TZ=Europe/Paris # timezone
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${HOME}/.config/sonarr:/config # config files
      - /media/series:/tv # tv shows folder
      - /media/ongoing/completed:/downloads/completed # download folder

  radarr:
    container_name: radarr
    image: lsioarmhf/radarr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=1000 # default user id, for downloaded files access rights
      - PGID=1000 # default group id, for downloaded files access rights
      - TZ=Europe/Paris # timezone
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${HOME}/.config/radarr:/config # config files
      - /media/movies:/movies # movies folder
      - /media/ongoing/completed:/downloads/completed # download folder

  plex-server:
    container_name: plex-server
    image: lsioarmhf/plex:latest
    restart: unless-stopped
    environment:
      - TZ=Europe/Paris # timezone
      - PUID=1000 # default user id, for downloaded files access rights
      - PGID=1000 # default group id, for downloaded files access rights
    network_mode: host
    volumes:
      - ${HOME}/.plex/db:/config # plex database
      - ${HOME}/.plex/transcode:/transcode # temp transcoded files
      - /media:/data # media library

  emby:
    container_name: emby
    image: emby/embyserver_arm32v7_neon:latest
    restart: unless-stopped
    ports:
      - "8096:8096"
      - "8920:8920"
      - "7359:7359/udp"
      - "1900:1900/udp"
    environment:
      - PUID=1000 # default user id, for downloaded files access rights
      - PGID=1000 # default group id, for downloaded files access rights
      - TZ=Europe/Paris # timezone
    network_mode: host
    volumes:
      - ${HOME}/.config/emby:/config # config files
      - /media:/media # media library
  

  portainer:
    image: portainer/portainer
    ports:
      - "9001:9000"
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

volumes:
  portainer_data:
