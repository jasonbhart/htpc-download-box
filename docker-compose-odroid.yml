version: '3.4'
services:

  vpn:
    container_name: vpn
    image: dperson/openvpn-client:aarch64
    cap_add:
      - net_admin # required to modify network interfaces
    environment:
      - TZ=${TZ} # timezone
      - FIREWALL
      - DNS
#    read_only: true
    tmpfs:
      - /run
      - /tmp
    restart: unless-stopped
    security_opt:
      - label:disable
    stdin_open: true
    tty: true
    volumes:
      - /dev/net/tun:/dev/net/tun:z # tunnel device
      - ${HOME}/.vpn:/vpn # OpenVPN configuration
    ports:
      - 8112:8112 # port for Deluge web UI to be reachable from local network
#      - 9091:9091 # port for Transmission web UI to be reachable from local network
    command: '-d -r 192.168.50.0/24' # route local network traffic

  samba:
    container_name: samba
    image: dperson/samba:aarch64
    environment:
      - TZ=${TZ} # timezone
#    read_only: true
    tmpfs:
      - /tmp
    restart: unless-stopped
    stdin_open: true
    tty: true
    network_mode: host
    command: ["-w WORKGROUP", "-uadmin;password;1000;1000", "-sMovies;/movies;yes;yes;yes;all;admin;admin;Movies", "-sTV Series;/series;yes;yes;yes;all;admin;admin;Movies", "-sXXX;/xxx;yes;yes;yes;all;admin;admin;XXX", "-sXXX2;/xxx2;yes;yes;yes;all;admin;admin;XXX", "-r", "-n", "-g socket options = TCP_NODELAY IPTOS_LOWDELAY SO_RCVBUF=65536 SO_SNDBUF=65536"]
    volumes:
      - /media/usb1/series:/series:rw # download folder
      - /media/usb1/movies:/movies:rw # download folder
      - /media/usb3/xxx:/xxx:rw # download folder
      - /media/usb2:/xxx2:rw # download folder

  heimdall:
    container_name: heimdall
    image: linuxserver/heimdall
    environment:
#    read_only: true
    tmpfs:
      - /tmp
    restart: unless-stopped
    ports:
      - "8081:80"
    networks:
      - traefik_proxy
    environment:
      - PUID=${PUID} # default user id, for downloaded files access rights
      - PGID=${PGID} # default group id, for downloaded files access rights
      - TZ=${TZ} # timezone
    volumes:
      - /media/usb1/.config/heimdal:/config:rw # config files
    labels:
      - "traefik.enable=true"
      - "traefik.backend=heimdall"
      - "traefik.frontend.rule=Host:heimdall.${DOMAINNAME}"
      - "traefik.port=8081"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"

  deluge:
    container_name: deluge
    depends_on:
      - vpn
    image: linuxserver/deluge
    restart: unless-stopped
    network_mode: service:vpn # run on the vpn network
    environment:
      - PUID=${PUID} # default user id, for downloaded files access rights
      - PGID=${PGID} # default group id, for downloaded files access rights
      - TZ=${TZ} # timezone
    volumes:
      - /media/usb1/ongoing/completed:/downloads/completed # download folder
      - /media/usb1/ongoing/incomplete:/downloads/incomplete # download folder
      - /media/usb1/ongoing/torrent-blackhole:/downloads/torrent-blackhole # put .torrent files
      - /media/usb1/.config/deluge:/config # config files
    labels:
      - "traefik.enable=true"
      - "traefik.backend=deluge"
      - "traefik.frontend.rule=Host:deluge.${DOMAINNAME}"
      - "traefik.port=8112"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"

  nzbget:
    container_name: nzbget
    image: linuxserver/nzbget
    restart: unless-stopped
    ports:
      - "6789:6789"
    networks:
      - traefik_proxy
    environment:
      - PUID=${PUID} # default user id, for downloaded files access rights
      - PGID=${PGID} # default group id, for downloaded files access rights
      - TZ=${TZ} # timezone
    volumes:
      - /media/usb1/ongoing/completed:/downloads/completed # download folder
      - /media/usb1/ongoing/incomplete:/downloads/intermediate # download folder
      - /media/usb1/ongoing/nzb-queue:/downloads/queue # download temporary folder
      - /media/usb1/ongoing/nzb-tmp:/downloads/tmp # download temporary folder
      - /media/usb1/ongoing/nzb-blackhole:/downloads/nzb # place where to put .nzb files
      - /media/usb3/xxx:/downloads/completed/XXX # movies folder
      - /media/usb1/.config/nzbget:/config # config files
      - /media/usb1/.config/nzbget/scripts:/downloads/scripts # config files
    labels:
      - "traefik.enable=true"
      - "traefik.backend=nzbget"
      - "traefik.frontend.rule=Host:nzbget.${DOMAINNAME}"
      - "traefik.port=6789"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"

  jackett:
    container_name: jackett
    image: linuxserver/jackett
    restart: unless-stopped
    ports:
        - "9117:9117"
    networks:
      - traefik_proxy
    environment:
      - PUID=${PUID} # default user id, for downloaded files access rights
      - PGID=${PGID} # default group id, for downloaded files access rights
      - TZ=${TZ} # timezone
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /media/usb1/ongoing/torrent-blackhole:/downloads # place where to put .torrent files
      - /media/usb1/.config/jackett:/config # config files
    labels:
      - "traefik.enable=true"
      - "traefik.backend=jackett"
      - "traefik.frontend.rule=Host:jackett.${DOMAINNAME}"
      - "traefik.port=9117"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr
    restart: unless-stopped
    ports:
        - "8989:8989"
    networks:
      - default
      - traefik_proxy
    environment:
      - PUID=${PUID} # default user id, for downloaded files access rights
      - PGID=${PGID} # default group id, for downloaded files access rights
      - TZ=${TZ} # timezone
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /media/usb1/.config/sonarr:/config # config files
      - /media/usb1/series:/tv # tv shows folder
      - /media/usb1/ongoing/completed:/downloads/completed # download folder
    labels:
      - "traefik.enable=true"
      - "traefik.backend=sonarr"
      - "traefik.frontend.rule=Host:sonarr.${DOMAINNAME}"
      - "traefik.port=8989"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"

  radarr:
    container_name: radarr
    image: linuxserver/radarr
    restart: unless-stopped
    ports:
      - "7878:7878"
    networks:
      - default
      - traefik_proxy
    environment:
      - PUID=${PUID} # default user id, for downloaded files access rights
      - PGID=${PGID} # default group id, for downloaded files access rights
      - TZ=${TZ} # timezone
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /media/usb1/.config/radarr:/config # config files
      - /media/usb1/movies:/movies # movies folder
      - /media/usb1/ongoing/completed:/downloads/completed # download folder
    labels:
      - "traefik.enable=true"
      - "traefik.backend=radarr"
      - "traefik.frontend.rule=Host:radarr.${DOMAINNAME}"
      - "traefik.port=7878"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"

  traefik:
    container_name: traefik
    image: arm64v8/traefik:alpine
    restart: unless-stopped
    networks:
      - default
      - traefik_proxy
    depends_on:
      - deluge
      - nzbget
      - sonarr
      - radarr
      - jackett
#      - portainer
    ports:
      - "6660:6660"
      - "6661:6661"
      - "8080:8080"
    domainname: ${DOMAINNAME}
    environment:
      - TZ=${TZ} # timezone
      - PUID=${PUID} # default user id, for downloaded files access rights
      - PGID=${PGID} # default group id, for downloaded files access rights
      - DOMAINNAME=${DOMAINNAME}
      - CLOUDFLARE_EMAIL=jasonbhart@gmail.com
      - CLOUDFLARE_API_KEY=4f326d3ccb01ede7180bf0ef1287aee7b220a
    volumes:
      - /media/usb1/.config/traefik:/etc/traefik # config files
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=true"
      - "traefik.backend=traefik"
      - "traefik.frontend.rule=Host:traefik.${DOMAINNAME}"
      - "traefik.port=8080"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"

#  portainer:
#    container_name: portainer
#    image: portainer/portainer
#    restart: unless-stopped
#    command: -H unix:///var/run/docker.sock
#    ports:
#      - "9000:9000"
#    networks:
#      - traefik_proxy
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#      - portainer_data:/data
#    environment:
#      - TZ=${TZ}
#    labels:
#      - "traefik.enable=true"
#      - "traefik.backend=portainer"
#      - "traefik.frontend.rule=Host:portainer.${DOMAINNAME}"
#      - "traefik.port=9000"
#      - "traefik.docker.network=traefik_proxy"
#      - "traefik.frontend.headers.SSLRedirect=true"
#      - "traefik.frontend.headers.STSSeconds=315360000"
#      - "traefik.frontend.headers.browserXSSFilter=true"
#      - "traefik.frontend.headers.contentTypeNosniff=true"
#      - "traefik.frontend.headers.forceSTSHeader=true"
#      - "traefik.frontend.headers.SSLHost=${DOMAINNAME}"
#      - "traefik.frontend.headers.STSIncludeSubdomains=true"
#      - "traefik.frontend.headers.STSPreload=true"
#      - "traefik.frontend.headers.frameDeny=true"

#volumes:
#  portainer_data:

networks:
  traefik_proxy:
    external:
      name: traefik_proxy
  default:
    driver: bridge
